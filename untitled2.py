# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yJptJ3SjAIPCAVlAh1hIKm9f0yV4X-yF
"""

import numpy as np
import pandas as pd
from pandas import DataFrame
import scipy.stats as stats
import matplotlib.pyplot as plt
import sklearn
import seaborn as sns
import matplotlib.pyplot as plt
import pandas
from sklearn import tree
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt
import statsmodels.formula.api
from sklearn.linear_model import LinearRegression

base = pd.read_csv("wdbc.data")
base.head()

base.shape

type(base)

base.columns[:]

corr = base.corr()
sns.heatmap(corr, cmap= colormap, annot=False, fmt='.2f')
ax = plt.subplots(figsize = (15,10))
colormap= sea.diverging_palette(220,10, as_cmap=True)

base.corr()

grafico = plt.figure(figsize=(9,6))
plt.scatter(data['17.99'], data['10.38'])
plt.xlabel('Diagnostico')
plt.ylabel('Diagnostico')
plt.title('Diagnostico x Textura')

grafico = plt.figure(figsize=(9,6))
plt.scatter(data['17.99'], data['122.8'])
plt.xlabel('Diagnostico')
plt.ylabel('Perimetro')
plt.title('Diagnostico x Perimetro')

grafico = plt.figure(figsize=(9,6))
plt.scatter(data['17.99'], data['1001'])
plt.xlabel('Diagnostico')
plt.ylabel('Area')
plt.title('Diagnostico x Area')

# aic -98.60 bic -85.57
x = data['17.99']
y = data['122.8']
c = data['1001']
modelo = sm.ols(formula= 'x ~ y + c', data=base)
modelo = modelo.fit()
modelo.summary()

residuos = modelo.resid
plt.hist(residuos, bins=20)
plt.xlabel("Residuos")
plt.ylabel("Frequencia")
plt.title("Histograma de Residuos")
plt.show()

stats.probplot(residuos, dist="norm", plot=plt)
plt.title("Q-Q Plot de Residuos")
plt.show()

#hipotese nula = Dados normalmente distribuidos
stat, pval = stats.shapiro(residuos)
print(f'Shapiro-Wilk satatistica: {stat:.3f}, p-value: {pval:.3f}')